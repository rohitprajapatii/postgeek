worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;
    
    # Gzip compression
    gzip  on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types 
        text/plain 
        text/css 
        text/xml 
        text/javascript 
        application/json 
        application/javascript 
        application/xml+rss 
        application/atom+xml 
        image/svg+xml
        application/wasm;

    # Add headers for Flutter web compatibility
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # CORS headers for cross-origin requests
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With" always;

    server {
        listen       80;
        server_name  localhost;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";

        # Handle CORS preflight requests
        location ~ ^/api {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type "text/plain; charset=utf-8";
                add_header Content-Length 0;
                return 204;
            }

            proxy_pass http://backend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # CORS headers for API requests
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Credentials "true" always;
        }

        # Flutter web app files
        location / {
            root   /usr/share/nginx/html;
            index  index.html;
            try_files $uri $uri/ /index.html;
            
            # Cache control for different file types
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Access-Control-Allow-Origin "*";
            }
            
            # Special handling for Flutter's main.dart.js and flutter.js
            location ~* \.(dart\.js|flutter\.js)$ {
                expires 1d;
                add_header Cache-Control "public, max-age=86400";
                add_header Access-Control-Allow-Origin "*";
                add_header Content-Type "application/javascript";
            }
            
            # Special handling for service worker
            location ~* service-worker\.js$ {
                expires off;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Access-Control-Allow-Origin "*";
            }
            
            # Handle Flutter web app manifest and other metadata
            location ~* \.(json|webmanifest)$ {
                expires 1d;
                add_header Cache-Control "public, max-age=86400";
                add_header Access-Control-Allow-Origin "*";
            }
            
            # Ensure proper MIME type for WASM files
            location ~* \.wasm$ {
                add_header Content-Type "application/wasm";
                add_header Access-Control-Allow-Origin "*";
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }

        # Handle index.html specifically (no caching for SPA)
        location = /index.html {
            root   /usr/share/nginx/html;
            expires off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Access-Control-Allow-Origin "*";
        }

        # Error pages
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}